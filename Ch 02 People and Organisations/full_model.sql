-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-08-19 22:53:56 AEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE TABLESPACE urm_data 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
FLASHBACK ON;

CREATE USER urm IDENTIFIED BY ACCOUNT UNLOCK ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE activity_request (
    communication_event_id1    INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL,
    communication_event_id     INTEGER NOT NULL
)
LOGGING;

ALTER TABLE activity_request ADD CONSTRAINT activity_request_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                                              communication_event_id );

ALTER TABLE activity_request ADD CONSTRAINT activity_request_pkv1 UNIQUE ( communication_event_id1 );

CREATE TABLE agent (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE agent ADD CONSTRAINT agent_pk PRIMARY KEY ( party_role_id,
                                                        role_type_id );

CREATE TABLE association (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE association ADD CONSTRAINT association_pk PRIMARY KEY ( party_role_id,
                                                                    role_type_id );

CREATE TABLE bill_to_customer (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE bill_to_customer ADD CONSTRAINT bill_to_customer_pk PRIMARY KEY ( party_role_id,
                                                                              role_type_id );

CREATE TABLE urm.citizenship (
    from_date            DATE NOT NULL,
    thru_date            DATE,
    country_country_code CHAR(2 CHAR) NOT NULL,
    pers_pers_id         NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX urm.citzn_pk ON
    urm.citizenship (
        from_date
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.citizenship
    ADD CONSTRAINT citzn_pk PRIMARY KEY ( from_date )
        USING INDEX urm.citzn_pk;

CREATE TABLE communication_event (
    communication_event_id                                             INTEGER NOT NULL,
    datetime_started                                                   DATE NOT NULL,
    datetime_ended                                                     DATE,
    note                                                               VARCHAR2(2048 CHAR),
    party_relationship_from_date                                       DATE NOT NULL,
    party_relationship_party_role_id                                   INTEGER NOT NULL,
    party_relationship_party_role_id1                                  INTEGER NOT NULL,
    party_relationship_party_id                                        INTEGER NOT NULL,
    party_relationship_party_id1                                       INTEGER NOT NULL,
    contact_mechanism_type_contact_mechanism_type_id                   INTEGER NOT NULL,
    communication_event_status_type_communication_event_status_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE communication_event ADD CONSTRAINT communication_event_pk PRIMARY KEY ( communication_event_id );

CREATE TABLE communication_event_purpose (
    description                                                 VARCHAR2(1024 CHAR),
    communication_event_purpose_type_comm_event_purpose_type_id INTEGER NOT NULL,
    communication_event_communication_event_id                  INTEGER NOT NULL
)
LOGGING;

ALTER TABLE communication_event_purpose ADD CONSTRAINT communication_event_purpose_pk PRIMARY KEY ( communication_event_purpose_type_comm_event_purpose_type_id
,
                                                                                                    communication_event_communication_event_id
                                                                                                    );

CREATE TABLE communication_event_purpose_type (
    comm_event_purpose_type_id INTEGER NOT NULL,
    description                VARCHAR2(1024 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE communication_event_purpose_type ADD CONSTRAINT communication_event_purpose_type_pk PRIMARY KEY ( comm_event_purpose_type_id
);

CREATE TABLE communication_event_role (
    communication_event_communication_event_id                     INTEGER NOT NULL,
    party_party_id                                                 INTEGER NOT NULL,
    communication_event_role_type_communication_event_role_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE communication_event_role ADD CONSTRAINT communication_event_role_pk PRIMARY KEY ( communication_event_communication_event_id
,
                                                                                              party_party_id );

CREATE TABLE communication_event_role_type (
    communication_event_role_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE communication_event_role_type ADD CONSTRAINT communication_event_role_type_pk PRIMARY KEY ( communication_event_role_type_id
);

CREATE TABLE communication_event_status_type (
    communication_event_status_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE communication_event_status_type ADD CONSTRAINT communication_event_status_type_pk PRIMARY KEY ( communication_event_status_type_id
);

CREATE TABLE competitor (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE competitor ADD CONSTRAINT competitor_pk PRIMARY KEY ( party_role_id,
                                                                  role_type_id );

CREATE TABLE conference (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE conference ADD CONSTRAINT conference_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                                  communication_event_id );

CREATE TABLE contact (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE contact ADD CONSTRAINT contact_pk PRIMARY KEY ( party_role_id,
                                                            role_type_id );

CREATE TABLE contact_mechanism_type (
    contact_mechanism_type_id INTEGER NOT NULL,
    description               VARCHAR2(1024 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE contact_mechanism_type ADD CONSTRAINT contact_mechanism_type_pk PRIMARY KEY ( contact_mechanism_type_id );

CREATE TABLE contractor (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE contractor ADD CONSTRAINT contractor_pk PRIMARY KEY ( party_role_id,
                                                                  role_type_id );

CREATE TABLE corporation (
    legal_organisation_organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE corporation ADD CONSTRAINT corporation_pk PRIMARY KEY ( legal_organisation_organisation_organisation_id );

CREATE TABLE urm.country (
    country_code CHAR(2 CHAR) NOT NULL,
    country_name VARCHAR2(128 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

COMMENT ON COLUMN urm.country.country_code IS
    'ISO Country code';

CREATE UNIQUE INDEX urm.country_pk ON
    urm.country (
        country_code
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.country
    ADD CONSTRAINT country_pk PRIMARY KEY ( country_code )
        USING INDEX urm.country_pk;

CREATE TABLE customer (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( party_role_id,
                                                              role_type_id );

CREATE TABLE customer_relationship (
    from_date                           DATE NOT NULL,
    customer_party_role_id              INTEGER NOT NULL,
    customer_role_type_id               NUMBER NOT NULL,
    internal_organisation_party_role_id INTEGER NOT NULL,
    internal_organisation_role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE customer_relationship ADD CONSTRAINT customer_relationship_pk PRIMARY KEY ( from_date );

ALTER TABLE customer_relationship ADD CONSTRAINT customer_relationship_pkv1 UNIQUE ( customer_party_role_id,
                                                                                     customer_role_type_id );

CREATE TABLE customer_service_call (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE customer_service_call ADD CONSTRAINT customer_service_call_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                                                        communication_event_id );

CREATE TABLE department (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE department ADD CONSTRAINT department_pk PRIMARY KEY ( party_role_id,
                                                                  role_type_id );

CREATE TABLE distribution_channel (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE distribution_channel ADD CONSTRAINT distribution_channel_pk PRIMARY KEY ( party_role_id,
                                                                                      role_type_id );

CREATE TABLE distribution_channel_relationship (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE distribution_channel_relationship ADD CONSTRAINT distribution_channel_relationship_pk PRIMARY KEY ( from_date );

CREATE TABLE distributor (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE distributor ADD CONSTRAINT distributor_pk PRIMARY KEY ( party_role_id,
                                                                    role_type_id );

CREATE TABLE division (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE division ADD CONSTRAINT division_pk PRIMARY KEY ( party_role_id,
                                                              role_type_id );

CREATE TABLE eeoc_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE eeoc_classification ADD CONSTRAINT eeoc_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE email_communication (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE email_communication ADD CONSTRAINT email_communication_pk PRIMARY KEY ( communication_event_id );

CREATE TABLE employee (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( party_role_id,
                                                              role_type_id );

CREATE TABLE employment (
    from_date                           DATE NOT NULL,
    employee_party_role_id              INTEGER NOT NULL,
    employee_role_type_id               NUMBER NOT NULL,
    internal_organisation_party_role_id INTEGER NOT NULL,
    internal_organisation_role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE employment ADD CONSTRAINT employment_pk PRIMARY KEY ( from_date );

ALTER TABLE employment ADD CONSTRAINT employment_pkv1 UNIQUE ( internal_organisation_party_role_id,
                                                               internal_organisation_role_type_id );

CREATE TABLE end_user_customer (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE end_user_customer ADD CONSTRAINT end_user_customer_pk PRIMARY KEY ( party_role_id,
                                                                                role_type_id );

CREATE TABLE "Face-to-Face_Communication" (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE "Face-to-Face_Communication" ADD CONSTRAINT "Face-to-Face_Communication_PK" PRIMARY KEY ( communication_event_id );

CREATE TABLE family (
    informal_organisation_organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE family ADD CONSTRAINT family_pk PRIMARY KEY ( informal_organisation_organisation_organisation_id );

CREATE TABLE family_member (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE family_member ADD CONSTRAINT family_member_pk PRIMARY KEY ( party_role_id,
                                                                        role_type_id );

CREATE TABLE fax_communication (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE fax_communication ADD CONSTRAINT fax_communication_pk PRIMARY KEY ( communication_event_id );

CREATE TABLE urm.gender_type (
    gender_type_id CHAR(2 CHAR) NOT NULL,
    description    VARCHAR2(1024 CHAR) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

CREATE UNIQUE INDEX urm.gender_typ_pk ON
    urm.gender_type (
        gender_type_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE urm.gender_type
    ADD CONSTRAINT gender_typ_pk PRIMARY KEY ( gender_type_id )
        USING INDEX urm.gender_typ_pk;

CREATE TABLE government_agency (
    legal_organisation_organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE government_agency ADD CONSTRAINT government_agency_pk PRIMARY KEY ( legal_organisation_organisation_organisation_id );

CREATE TABLE household (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE household ADD CONSTRAINT household_pk PRIMARY KEY ( party_role_id,
                                                                role_type_id );

CREATE TABLE income_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE income_classification ADD CONSTRAINT income_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE industry_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE industry_classification ADD CONSTRAINT industry_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE informal_organisation (
    organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE informal_organisation ADD CONSTRAINT informal_organisation_pk PRIMARY KEY ( organisation_organisation_id );

CREATE TABLE informal_organization (
    party_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE informal_organization ADD CONSTRAINT informal_organization_pk PRIMARY KEY ( party_id );

CREATE TABLE inquiry (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE inquiry ADD CONSTRAINT inquiry_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                            communication_event_id );

CREATE TABLE internal_organisation (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE internal_organisation ADD CONSTRAINT internal_organisation_pk PRIMARY KEY ( party_role_id,
                                                                                        role_type_id );

CREATE TABLE legal_organisation (
    organisation_organisation_id INTEGER NOT NULL,
    federal_tax_id_num           NUMBER
)
LOGGING;

ALTER TABLE legal_organisation ADD CONSTRAINT legal_organisation_pk PRIMARY KEY ( organisation_organisation_id );

CREATE TABLE legal_organization (
    party_id           INTEGER NOT NULL,
    federal_tax_id_num NUMBER
)
LOGGING;

ALTER TABLE legal_organization ADD CONSTRAINT legal_organization_pk PRIMARY KEY ( party_id );

CREATE TABLE letter_communication (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE letter_communication ADD CONSTRAINT letter_communication_pk PRIMARY KEY ( communication_event_id );

CREATE TABLE urm.marital_status (
    from_date         DATE NOT NULL,
    thru_date         DATE,
    martl_stat_typ_id NUMBER NOT NULL,
    pers_pers_id      NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX urm.martl_stat_pk ON
    urm.marital_status (
        from_date
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.marital_status
    ADD CONSTRAINT martl_stat_pk PRIMARY KEY ( from_date )
        USING INDEX urm.martl_stat_pk;

CREATE TABLE urm.marital_status_type (
    marital_status_type_id NUMBER NOT NULL,
    description            VARCHAR2(1024 CHAR) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX urm.martl_stat_typ_pk ON
    urm.marital_status_type (
        marital_status_type_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.marital_status_type
    ADD CONSTRAINT martl_stat_typ_pk PRIMARY KEY ( marital_status_type_id )
        USING INDEX urm.martl_stat_typ_pk;

CREATE TABLE meeting (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE meeting ADD CONSTRAINT meeting_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                            communication_event_id );

CREATE TABLE minority_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE minority_classification ADD CONSTRAINT minority_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE organisation (
    party_id           INTEGER NOT NULL,
    name               VARCHAR2(256 CHAR) NOT NULL,
    federal_tax_id_num NUMBER
)
LOGGING;

ALTER TABLE organisation ADD CONSTRAINT organisation_pk PRIMARY KEY ( party_id );

CREATE TABLE organisation_role (
    party_role_id INTEGER NOT NULL,
    party_id      NUMBER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE organisation_role ADD CONSTRAINT organisation_role_pk PRIMARY KEY ( party_role_id,
                                                                                role_type_id );

CREATE TABLE organisation_rollup (
    from_date                        DATE NOT NULL,
    organisation_unit_party_role_id2 INTEGER NOT NULL,
    organisation_unit_role_type_id2  NUMBER NOT NULL,
    organisation_unit_party_role_id  INTEGER NOT NULL,
    organisation_unit_role_type_id   NUMBER NOT NULL
)
LOGGING;

ALTER TABLE organisation_rollup ADD CONSTRAINT organisation_rollup_pk PRIMARY KEY ( from_date );

ALTER TABLE organisation_rollup ADD CONSTRAINT organisation_rollup_pkv1 UNIQUE ( organisation_unit_party_role_id,
                                                                                 organisation_unit_role_type_id );

CREATE TABLE organisation_unit (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE organisation_unit ADD CONSTRAINT organisation_unit_pk PRIMARY KEY ( party_role_id,
                                                                                role_type_id );

CREATE TABLE organization (
    party_id INTEGER NOT NULL,
    name     VARCHAR2(255) NOT NULL
)
LOGGING;

ALTER TABLE organization ADD CONSTRAINT organization_pk PRIMARY KEY ( party_id );

-- Error - Unique Constraint Organization.Organization_PKv1 doesn't have columns

CREATE TABLE organization_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE organization_classification ADD CONSTRAINT organization_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE organization_contact_relationship (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE organization_contact_relationship ADD CONSTRAINT organization_contact_relationship_pk PRIMARY KEY ( from_date );

CREATE TABLE organization_rollup (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE organization_rollup ADD CONSTRAINT organization_rollup_pk PRIMARY KEY ( from_date );

CREATE TABLE other_informal_organisation (
    informal_organisation_organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE other_informal_organisation ADD CONSTRAINT other_informal_organisation_pk PRIMARY KEY ( informal_organisation_organisation_organisation_id
);

CREATE TABLE other_organisation_unit (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE other_organisation_unit ADD CONSTRAINT other_organisation_unit_pk PRIMARY KEY ( party_role_id,
                                                                                            role_type_id );

CREATE TABLE parent_organisation (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE parent_organisation ADD CONSTRAINT parent_organisation_pk PRIMARY KEY ( party_role_id,
                                                                                    role_type_id );

CREATE TABLE partner (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE partner ADD CONSTRAINT partner_pk PRIMARY KEY ( party_role_id,
                                                            role_type_id );

CREATE TABLE partnership (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE partnership ADD CONSTRAINT partnership_pk PRIMARY KEY ( from_date );

CREATE TABLE party (
    party_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE party ADD CONSTRAINT party_pk PRIMARY KEY ( party_id );

CREATE TABLE party_classification (
    from_date                DATE NOT NULL,
    thru_date                DATE,
    party_type_party_type_id INTEGER NOT NULL,
    from_date1               DATE NOT NULL
)
LOGGING;

ALTER TABLE party_classification ADD CONSTRAINT party_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE party_relationship (
    from_date                  DATE NOT NULL,
    thru_date                  DATE,
    "Comment"                  VARCHAR2(1024),
    party_role_party_role_id   INTEGER NOT NULL,
    party_role_party_role_id2  INTEGER NOT NULL,
    party_role_party_party_id2 INTEGER NOT NULL,
    party_role_party_party_id  INTEGER NOT NULL,
    status_type_status_type_id INTEGER
)
LOGGING;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_pk PRIMARY KEY ( from_date,
                                                       party_role_party_role_id,
                                                       party_role_party_party_id,
                                                       party_role_party_role_id2,
                                                       party_role_party_party_id2 );

CREATE TABLE party_relationship_status_type (
    status_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE party_relationship_status_type ADD CONSTRAINT party_relationship_status_type_pk PRIMARY KEY ( status_type_id );

CREATE TABLE party_relationship_type (
    party_relationship_type_id INTEGER NOT NULL,
    description                VARCHAR2(1024 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE party_relationship_type ADD CONSTRAINT party_relationship_type_pk PRIMARY KEY ( party_relationship_type_id );

CREATE TABLE party_role (
    party_role_id                INTEGER NOT NULL,
    party_party_id               INTEGER NOT NULL,
    from_date                    DATE NOT NULL,
    thru_date                    unknown 
--  ERROR: Datatype UNKNOWN is not allowed 
    ,
    party_role_id1               NUMBER NOT NULL,
    party_role_type_role_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE party_role ADD CONSTRAINT party_role_pk PRIMARY KEY ( party_role_id,
                                                                  party_party_id );

CREATE TABLE party_role_type (
    role_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE party_role_type ADD CONSTRAINT party_role_type_pk PRIMARY KEY ( role_type_id );

CREATE TABLE party_type (
    party_type_id INTEGER NOT NULL,
    description   VARCHAR2(255 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE party_type ADD CONSTRAINT party_type_pk PRIMARY KEY ( party_type_id );

CREATE TABLE urm.passport (
    passport_id     NUMBER NOT NULL,
    passport_num    NUMBER NOT NULL,
    issue_date      DATE NOT NULL,
    expiry_date     DATE NOT NULL,
    citzn_from_date DATE NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX urm.passport_pk ON
    urm.passport (
        passport_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.passport
    ADD CONSTRAINT passport_pk PRIMARY KEY ( passport_id )
        USING INDEX urm.passport_pk;

CREATE TABLE person (
    party_id                     INTEGER NOT NULL,
    current_last_name            VARCHAR2(32 CHAR) NOT NULL,
    current_first_name           VARCHAR2(32 CHAR) NOT NULL,
    current_middle_name          VARCHAR2(32 CHAR),
    current_personal_title       VARCHAR2(16 CHAR),
    current_suffix               VARCHAR2(16 CHAR),
    current_nickname             VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    gender                       VARCHAR2(8 CHAR) NOT NULL,
    birth_date                   DATE NOT NULL,
    height                       SMALLINT,
    weight                       SMALLINT,
    mothers_maiden_name          VARCHAR2 
--  ERROR: VARCHAR2 size not specified 
    ,
    marital_status               VARCHAR2(32 CHAR),
    social_security_no           VARCHAR2(16 CHAR),
    current_passport_no          VARCHAR2(32 CHAR),
    current_passport_expiry_date DATE,
    total_years_work_experience  SMALLINT,
    "comment"                    VARCHAR2(256)
)
LOGGING;

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( party_id );

CREATE TABLE urm.person (
    birth_date                  DATE,
    mothers_maiden_name         VARCHAR2(512 CHAR),
    social_security_no          VARCHAR2(32 CHAR),
    total_years_work_experience NUMBER(*, 0),
    "Comment"                   VARCHAR2(512 CHAR),
    gender_typ_gender_typ_id    CHAR(2 CHAR) NOT NULL,
    pers_id                     NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

CREATE UNIQUE INDEX urm.pers_pk ON
    urm.person (
        pers_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE urm.person
    ADD CONSTRAINT pers_pk PRIMARY KEY ( pers_id )
        USING INDEX urm.pers_pk;

CREATE TABLE person_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE person_classification ADD CONSTRAINT person_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE urm.person_name (
    name_seq_id               NUMBER NOT NULL,
    from_date                 DATE NOT NULL,
    thru_date                 DATE,
    name                      VARCHAR2(512 CHAR) NOT NULL,
    pers_name_typ_pers_typ_id NUMBER NOT NULL,
    pers_pers_id              NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

CREATE UNIQUE INDEX urm.pers_name_pk ON
    urm.person_name (
        name_seq_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE urm.person_name
    ADD CONSTRAINT pers_name_pk PRIMARY KEY ( name_seq_id )
        USING INDEX urm.pers_name_pk;

CREATE TABLE urm.person_name_type (
    person_type_id NUMBER NOT NULL,
    description    VARCHAR2(1024 CHAR) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

CREATE UNIQUE INDEX urm.pers_name_typ_pk ON
    urm.person_name_type (
        person_type_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

ALTER TABLE urm.person_name_type
    ADD CONSTRAINT pers_name_typ_pk PRIMARY KEY ( person_type_id )
        USING INDEX urm.pers_name_typ_pk;

CREATE TABLE person_role (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE person_role ADD CONSTRAINT person_role_pk PRIMARY KEY ( party_role_id,
                                                                    role_type_id );

CREATE TABLE phone_communication (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE phone_communication ADD CONSTRAINT phone_communication_pk PRIMARY KEY ( communication_event_id );

CREATE TABLE urm.physical_characteristic (
    from_date                 DATE NOT NULL,
    thru_date                 DATE,
    phys_char_typ_char_typ_id NUMBER NOT NULL,
    pers_pers_id              NUMBER NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE TABLE urm.physical_characteristic_type (
    characteristic_type_id NUMBER NOT NULL,
    description            VARCHAR2(1024 CHAR) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE urm_data LOGGING
    STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
NO INMEMORY;

CREATE UNIQUE INDEX urm.phys_char_typ_pk ON
    urm.physical_characteristic_type (
        characteristic_type_id
    ASC )
        TABLESPACE urm_data PCTFREE 10
            STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
        LOGGING;

ALTER TABLE urm.physical_characteristic_type
    ADD CONSTRAINT phys_char_typ_pk PRIMARY KEY ( characteristic_type_id )
        USING INDEX urm.phys_char_typ_pk;

CREATE TABLE priority_type (
    priority_type_id INTEGER NOT NULL,
    description      VARCHAR2(1024 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE priority_type ADD CONSTRAINT priority_type_pk PRIMARY KEY ( priority_type_id );

CREATE TABLE prospect (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE prospect ADD CONSTRAINT prospect_pk PRIMARY KEY ( party_role_id,
                                                              role_type_id );

CREATE TABLE regulation_authority (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE regulation_authority ADD CONSTRAINT regulation_authority_pk PRIMARY KEY ( party_role_id,
                                                                                      role_type_id );

CREATE TABLE role_type (
    role_type_id NUMBER NOT NULL,
    description  VARCHAR2(1024) NOT NULL
)
LOGGING;

ALTER TABLE role_type ADD CONSTRAINT role_type_pk PRIMARY KEY ( role_type_id );

CREATE TABLE sales_follow_up (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE sales_follow_up ADD CONSTRAINT sales_follow_up_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                                            communication_event_id );

CREATE TABLE seminar (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE seminar ADD CONSTRAINT seminar_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                            communication_event_id );

CREATE TABLE shareholder (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE shareholder ADD CONSTRAINT shareholder_pk PRIMARY KEY ( party_role_id,
                                                                    role_type_id );

CREATE TABLE ship_to_customer (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE ship_to_customer ADD CONSTRAINT ship_to_customer_pk PRIMARY KEY ( party_role_id,
                                                                              role_type_id );

CREATE TABLE size_classification (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE size_classification ADD CONSTRAINT size_classification_pk PRIMARY KEY ( from_date );

CREATE TABLE status_type (
    status_type_id INTEGER NOT NULL,
    description    VARCHAR2(1024 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE status_type ADD CONSTRAINT status_type_pk PRIMARY KEY ( status_type_id );

CREATE TABLE subsidary (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE subsidary ADD CONSTRAINT subsidary_pk PRIMARY KEY ( party_role_id,
                                                                role_type_id );

CREATE TABLE supplier (
    party_role_id INTEGER NOT NULL,
    role_type_id  NUMBER NOT NULL
)
LOGGING;

ALTER TABLE supplier ADD CONSTRAINT supplier_pk PRIMARY KEY ( party_role_id,
                                                              role_type_id );

CREATE TABLE supplier_relationship (
    from_date DATE NOT NULL
)
LOGGING;

ALTER TABLE supplier_relationship ADD CONSTRAINT supplier_relationship_pk PRIMARY KEY ( from_date );

CREATE TABLE support_call (
    communication_event_id     INTEGER NOT NULL,
    comm_event_purpose_type_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE support_call ADD CONSTRAINT support_call_pk PRIMARY KEY ( comm_event_purpose_type_id,
                                                                      communication_event_id );

CREATE TABLE team (
    informal_organisation_organisation_organisation_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE team ADD CONSTRAINT team_pk PRIMARY KEY ( informal_organisation_organisation_organisation_id );

CREATE TABLE valid_contact_mechanism_role (
    contact_mechanism_type_contact_mechanism_type_id               INTEGER NOT NULL,
    communication_event_role_type_communication_event_role_type_id NUMBER NOT NULL
)
LOGGING;

ALTER TABLE valid_contact_mechanism_role ADD CONSTRAINT valid_contact_mechanism_role_pk PRIMARY KEY ( contact_mechanism_type_contact_mechanism_type_id
);

CREATE TABLE web_site_communication (
    communication_event_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE web_site_communication ADD CONSTRAINT web_site_communication_pk PRIMARY KEY ( communication_event_id );

ALTER TABLE activity_request
    ADD CONSTRAINT activity_request_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                                 communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE agent
    ADD CONSTRAINT agent_distribution_channel_fk FOREIGN KEY ( party_role_id,
                                                               role_type_id )
        REFERENCES distribution_channel ( party_role_id,
                                          role_type_id )
    NOT DEFERRABLE;

ALTER TABLE association
    ADD CONSTRAINT association_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                  role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE bill_to_customer
    ADD CONSTRAINT bill_to_customer_customer_fk FOREIGN KEY ( party_role_id,
                                                              role_type_id )
        REFERENCES customer ( party_role_id,
                              role_type_id )
    NOT DEFERRABLE;

ALTER TABLE urm.citizenship
    ADD CONSTRAINT citzn_country_fk FOREIGN KEY ( country_country_code )
        REFERENCES urm.country ( country_code )
    NOT DEFERRABLE;

ALTER TABLE urm.citizenship
    ADD CONSTRAINT citzn_pers_fk FOREIGN KEY ( pers_pers_id )
        REFERENCES urm.person ( pers_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event
    ADD CONSTRAINT communication_event_communication_event_status_type_fk FOREIGN KEY ( communication_event_status_type_communication_event_status_type_id
    )
        REFERENCES communication_event_status_type ( communication_event_status_type_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event
    ADD CONSTRAINT communication_event_contact_mechanism_type_fk FOREIGN KEY ( contact_mechanism_type_contact_mechanism_type_id )
        REFERENCES contact_mechanism_type ( contact_mechanism_type_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event
    ADD CONSTRAINT communication_event_party_relationship_fk FOREIGN KEY ( party_relationship_from_date,
                                                                           party_relationship_party_role_id,
                                                                           party_relationship_party_id1,
                                                                           party_relationship_party_role_id1,
                                                                           party_relationship_party_id )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE communication_event_purpose
    ADD CONSTRAINT communication_event_purpose_communication_event_fk FOREIGN KEY ( communication_event_communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event_purpose
    ADD CONSTRAINT communication_event_purpose_communication_event_purpose_type_fk FOREIGN KEY ( communication_event_purpose_type_comm_event_purpose_type_id
    )
        REFERENCES communication_event_purpose_type ( comm_event_purpose_type_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event_role
    ADD CONSTRAINT communication_event_role_communication_event_fk FOREIGN KEY ( communication_event_communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event_role
    ADD CONSTRAINT communication_event_role_communication_event_role_type_fk FOREIGN KEY ( communication_event_role_type_communication_event_role_type_id
    )
        REFERENCES communication_event_role_type ( communication_event_role_type_id )
    NOT DEFERRABLE;

ALTER TABLE communication_event_role
    ADD CONSTRAINT communication_event_role_party_fk FOREIGN KEY ( party_party_id )
        REFERENCES party ( party_id )
    NOT DEFERRABLE;

ALTER TABLE competitor
    ADD CONSTRAINT competitor_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                 role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE conference
    ADD CONSTRAINT conference_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                           communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE contact
    ADD CONSTRAINT contact_person_role_fk FOREIGN KEY ( party_role_id,
                                                        role_type_id )
        REFERENCES person_role ( party_role_id,
                                 role_type_id )
    NOT DEFERRABLE;

ALTER TABLE contractor
    ADD CONSTRAINT contractor_person_role_fk FOREIGN KEY ( party_role_id,
                                                           role_type_id )
        REFERENCES person_role ( party_role_id,
                                 role_type_id )
    NOT DEFERRABLE;

ALTER TABLE corporation
    ADD CONSTRAINT corporation_legal_organisation_fk FOREIGN KEY ( legal_organisation_organisation_organisation_id )
        REFERENCES legal_organisation ( organisation_organisation_id )
    NOT DEFERRABLE;

ALTER TABLE customer
    ADD CONSTRAINT customer_party_role_fk FOREIGN KEY ( party_role_id,
                                                        role_type_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE customer_relationship
    ADD CONSTRAINT customer_relationship_customer_fk FOREIGN KEY ( customer_party_role_id,
                                                                   customer_role_type_id )
        REFERENCES customer ( party_role_id,
                              role_type_id )
    NOT DEFERRABLE;

ALTER TABLE customer_relationship
    ADD CONSTRAINT customer_relationship_internal_organisation_fk FOREIGN KEY ( internal_organisation_party_role_id,
                                                                                internal_organisation_role_type_id )
        REFERENCES internal_organisation ( party_role_id,
                                           role_type_id )
    NOT DEFERRABLE;

ALTER TABLE customer_relationship
    ADD CONSTRAINT customer_relationship_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE customer_service_call
    ADD CONSTRAINT customer_service_call_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                                      communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE department
    ADD CONSTRAINT department_organisation_unit_fk FOREIGN KEY ( party_role_id,
                                                                 role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE distribution_channel
    ADD CONSTRAINT distribution_channel_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                           role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE distribution_channel_relationship
    ADD CONSTRAINT distribution_channel_relationship_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE distributor
    ADD CONSTRAINT distributor_distribution_channel_fk FOREIGN KEY ( party_role_id,
                                                                     role_type_id )
        REFERENCES distribution_channel ( party_role_id,
                                          role_type_id )
    NOT DEFERRABLE;

ALTER TABLE division
    ADD CONSTRAINT division_organisation_unit_fk FOREIGN KEY ( party_role_id,
                                                               role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE eeoc_classification
    ADD CONSTRAINT eeoc_classification_person_classification_fk FOREIGN KEY ( from_date )
        REFERENCES person_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE email_communication
    ADD CONSTRAINT email_communication_communication_event_fk FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE employee
    ADD CONSTRAINT employee_person_role_fk FOREIGN KEY ( party_role_id,
                                                         role_type_id )
        REFERENCES person_role ( party_role_id,
                                 role_type_id )
    NOT DEFERRABLE;

ALTER TABLE employment
    ADD CONSTRAINT employment_employee_fk FOREIGN KEY ( employee_party_role_id,
                                                        employee_role_type_id )
        REFERENCES employee ( party_role_id,
                              role_type_id )
    NOT DEFERRABLE;

ALTER TABLE employment
    ADD CONSTRAINT employment_internal_organisation_fk FOREIGN KEY ( internal_organisation_party_role_id,
                                                                     internal_organisation_role_type_id )
        REFERENCES internal_organisation ( party_role_id,
                                           role_type_id )
    NOT DEFERRABLE;

ALTER TABLE employment
    ADD CONSTRAINT employment_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE end_user_customer
    ADD CONSTRAINT end_user_customer_customer_fk FOREIGN KEY ( party_role_id,
                                                               role_type_id )
        REFERENCES customer ( party_role_id,
                              role_type_id )
    NOT DEFERRABLE;

ALTER TABLE "Face-to-Face_Communication"
    ADD CONSTRAINT "Face-to-Face_Communication_Communication_Event_FK" FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE family
    ADD CONSTRAINT family_informal_organisation_fk FOREIGN KEY ( informal_organisation_organisation_organisation_id )
        REFERENCES informal_organisation ( organisation_organisation_id )
    NOT DEFERRABLE;

ALTER TABLE family_member
    ADD CONSTRAINT family_member_person_role_fk FOREIGN KEY ( party_role_id,
                                                              role_type_id )
        REFERENCES person_role ( party_role_id,
                                 role_type_id )
    NOT DEFERRABLE;

ALTER TABLE fax_communication
    ADD CONSTRAINT fax_communication_communication_event_fk FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE government_agency
    ADD CONSTRAINT government_agency_legal_organisation_fk FOREIGN KEY ( legal_organisation_organisation_organisation_id )
        REFERENCES legal_organisation ( organisation_organisation_id )
    NOT DEFERRABLE;

ALTER TABLE household
    ADD CONSTRAINT household_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE income_classification
    ADD CONSTRAINT income_classification_person_classification_fk FOREIGN KEY ( from_date )
        REFERENCES person_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE industry_classification
    ADD CONSTRAINT industry_classification_organization_classification_fk FOREIGN KEY ( from_date )
        REFERENCES organization_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE informal_organisation
    ADD CONSTRAINT informal_organisation_organisation_fk FOREIGN KEY ( organisation_organisation_id )
        REFERENCES organisation ( party_id )
    NOT DEFERRABLE;

ALTER TABLE informal_organization
    ADD CONSTRAINT informal_organization_organization_fk FOREIGN KEY ( party_id )
        REFERENCES organization ( party_id )
    NOT DEFERRABLE;

ALTER TABLE inquiry
    ADD CONSTRAINT inquiry_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                        communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE internal_organisation
    ADD CONSTRAINT internal_organisation_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                            role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE legal_organisation
    ADD CONSTRAINT legal_organisation_organisation_fk FOREIGN KEY ( organisation_organisation_id )
        REFERENCES organisation ( party_id )
    NOT DEFERRABLE;

ALTER TABLE legal_organization
    ADD CONSTRAINT legal_organization_organization_fk FOREIGN KEY ( party_id )
        REFERENCES organization ( party_id )
    NOT DEFERRABLE;

ALTER TABLE letter_communication
    ADD CONSTRAINT letter_communication_communication_event_fk FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE urm.marital_status
    ADD CONSTRAINT martl_stat_martl_stat_typ_fk FOREIGN KEY ( martl_stat_typ_id )
        REFERENCES urm.marital_status_type ( marital_status_type_id )
    NOT DEFERRABLE;

ALTER TABLE urm.marital_status
    ADD CONSTRAINT martl_stat_pers_fk FOREIGN KEY ( pers_pers_id )
        REFERENCES urm.person ( pers_id )
    NOT DEFERRABLE;

ALTER TABLE meeting
    ADD CONSTRAINT meeting_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                        communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE minority_classification
    ADD CONSTRAINT minority_classification_organization_classification_fk FOREIGN KEY ( from_date )
        REFERENCES organization_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE organisation
    ADD CONSTRAINT organisation_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id )
    NOT DEFERRABLE;

ALTER TABLE organisation_role
    ADD CONSTRAINT organisation_role_party_role_fk FOREIGN KEY ( party_role_id,
                                                                 role_type_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE organisation_rollup
    ADD CONSTRAINT organisation_rollup_organisation_unit_fk FOREIGN KEY ( organisation_unit_party_role_id,
                                                                          organisation_unit_role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE organisation_rollup
    ADD CONSTRAINT organisation_rollup_organisation_unit_fkv2 FOREIGN KEY ( organisation_unit_party_role_id2,
                                                                            organisation_unit_role_type_id2 )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE organisation_rollup
    ADD CONSTRAINT organisation_rollup_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE organisation_unit
    ADD CONSTRAINT organisation_unit_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                        role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE organization_classification
    ADD CONSTRAINT organization_classification_party_classification_fk FOREIGN KEY ( from_date )
        REFERENCES party_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE organization_contact_relationship
    ADD CONSTRAINT organization_contact_relationship_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE organization
    ADD CONSTRAINT organization_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id )
    NOT DEFERRABLE;

ALTER TABLE organization_rollup
    ADD CONSTRAINT organization_rollup_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE other_informal_organisation
    ADD CONSTRAINT other_informal_organisation_informal_organisation_fk FOREIGN KEY ( informal_organisation_organisation_organisation_id
    )
        REFERENCES informal_organisation ( organisation_organisation_id )
    NOT DEFERRABLE;

ALTER TABLE other_organisation_unit
    ADD CONSTRAINT other_organisation_unit_organisation_unit_fk FOREIGN KEY ( party_role_id,
                                                                              role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE parent_organisation
    ADD CONSTRAINT parent_organisation_organisation_unit_fk FOREIGN KEY ( party_role_id,
                                                                          role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE partner
    ADD CONSTRAINT partner_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                              role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE partnership
    ADD CONSTRAINT partnership_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

-- Error - Foreign Key Party_Classification_Party_FK has no columns

ALTER TABLE party_classification
    ADD CONSTRAINT party_classification_party_type_fk FOREIGN KEY ( party_type_party_type_id )
        REFERENCES party_type ( party_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_party_relationship_type_fk FOREIGN KEY ( party_role_party_party_id2 )
        REFERENCES party_relationship_type ( party_relationship_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_party_role_fk FOREIGN KEY ( party_role_party_role_id,
                                                                  party_role_party_party_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_party_role_fkv2 FOREIGN KEY ( party_role_party_role_id2,
                                                                    party_role_party_party_id2 )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_priority_type_fk FOREIGN KEY ( party_role_party_party_id )
        REFERENCES priority_type ( priority_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship
    ADD CONSTRAINT party_relationship_status_type_fk FOREIGN KEY ( status_type_status_type_id )
        REFERENCES status_type ( status_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_relationship_status_type
    ADD CONSTRAINT party_relationship_status_type_status_type_fk FOREIGN KEY ( status_type_id )
        REFERENCES status_type ( status_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_role
    ADD CONSTRAINT party_role_party_fk FOREIGN KEY ( party_party_id )
        REFERENCES party ( party_id )
    NOT DEFERRABLE;

ALTER TABLE party_role
    ADD CONSTRAINT party_role_party_role_type_fk FOREIGN KEY ( party_role_type_role_type_id )
        REFERENCES party_role_type ( role_type_id )
    NOT DEFERRABLE;

ALTER TABLE party_role_type
    ADD CONSTRAINT party_role_type_role_type_fk FOREIGN KEY ( role_type_id )
        REFERENCES role_type ( role_type_id )
    NOT DEFERRABLE;

ALTER TABLE urm.passport
    ADD CONSTRAINT passport_citzn_fk FOREIGN KEY ( citzn_from_date )
        REFERENCES urm.citizenship ( from_date )
    NOT DEFERRABLE;

ALTER TABLE urm.person
    ADD CONSTRAINT pers_gender_typ_fk FOREIGN KEY ( gender_typ_gender_typ_id )
        REFERENCES urm.gender_type ( gender_type_id )
    NOT DEFERRABLE;

ALTER TABLE urm.person_name
    ADD CONSTRAINT pers_name_pers_fk FOREIGN KEY ( pers_pers_id )
        REFERENCES urm.person ( pers_id )
    NOT DEFERRABLE;

ALTER TABLE urm.person_name
    ADD CONSTRAINT pers_name_pers_name_typ_fk FOREIGN KEY ( pers_name_typ_pers_typ_id )
        REFERENCES urm.person_name_type ( person_type_id )
    NOT DEFERRABLE;

ALTER TABLE person_classification
    ADD CONSTRAINT person_classification_party_classification_fk FOREIGN KEY ( from_date )
        REFERENCES party_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE person
    ADD CONSTRAINT person_party_fk FOREIGN KEY ( party_id )
        REFERENCES party ( party_id )
    NOT DEFERRABLE;

ALTER TABLE person_role
    ADD CONSTRAINT person_role_party_role_fk FOREIGN KEY ( party_role_id,
                                                           role_type_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE phone_communication
    ADD CONSTRAINT phone_communication_communication_event_fk FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE urm.physical_characteristic
    ADD CONSTRAINT phys_char_pers_fk FOREIGN KEY ( pers_pers_id )
        REFERENCES urm.person ( pers_id )
    NOT DEFERRABLE;

ALTER TABLE urm.physical_characteristic
    ADD CONSTRAINT phys_char_phys_char_typ_fk FOREIGN KEY ( phys_char_typ_char_typ_id )
        REFERENCES urm.physical_characteristic_type ( characteristic_type_id )
    NOT DEFERRABLE;

ALTER TABLE prospect
    ADD CONSTRAINT prospect_party_role_fk FOREIGN KEY ( party_role_id,
                                                        role_type_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE regulation_authority
    ADD CONSTRAINT regulation_authority_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                                           role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE sales_follow_up
    ADD CONSTRAINT sales_follow_up_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                                communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE seminar
    ADD CONSTRAINT seminar_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                        communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE shareholder
    ADD CONSTRAINT shareholder_party_role_fk FOREIGN KEY ( party_role_id,
                                                           role_type_id )
        REFERENCES party_role ( party_role_id,
                                party_party_id )
    NOT DEFERRABLE;

ALTER TABLE ship_to_customer
    ADD CONSTRAINT ship_to_customer_customer_fk FOREIGN KEY ( party_role_id,
                                                              role_type_id )
        REFERENCES customer ( party_role_id,
                              role_type_id )
    NOT DEFERRABLE;

ALTER TABLE size_classification
    ADD CONSTRAINT size_classification_organization_classification_fk FOREIGN KEY ( from_date )
        REFERENCES organization_classification ( from_date )
    NOT DEFERRABLE;

ALTER TABLE subsidary
    ADD CONSTRAINT subsidary_organisation_unit_fk FOREIGN KEY ( party_role_id,
                                                                role_type_id )
        REFERENCES organisation_unit ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE supplier
    ADD CONSTRAINT supplier_organisation_role_fk FOREIGN KEY ( party_role_id,
                                                               role_type_id )
        REFERENCES organisation_role ( party_role_id,
                                       role_type_id )
    NOT DEFERRABLE;

ALTER TABLE supplier_relationship
    ADD CONSTRAINT supplier_relationship_party_relationship_fk FOREIGN KEY ( from_date )
        REFERENCES party_relationship ( from_date,
                                        party_role_party_role_id,
                                        party_role_party_party_id,
                                        party_role_party_role_id2,
                                        party_role_party_party_id2 )
    NOT DEFERRABLE;

ALTER TABLE support_call
    ADD CONSTRAINT support_call_communication_event_purpose_fk FOREIGN KEY ( comm_event_purpose_type_id,
                                                                             communication_event_id )
        REFERENCES communication_event_purpose ( communication_event_purpose_type_comm_event_purpose_type_id,
                                                 communication_event_communication_event_id )
    NOT DEFERRABLE;

ALTER TABLE team
    ADD CONSTRAINT team_informal_organisation_fk FOREIGN KEY ( informal_organisation_organisation_organisation_id )
        REFERENCES informal_organisation ( organisation_organisation_id )
    NOT DEFERRABLE;

ALTER TABLE valid_contact_mechanism_role
    ADD CONSTRAINT valid_contact_mechanism_role_communication_event_role_type_fk FOREIGN KEY ( communication_event_role_type_communication_event_role_type_id
    )
        REFERENCES communication_event_role_type ( communication_event_role_type_id )
    NOT DEFERRABLE;

ALTER TABLE valid_contact_mechanism_role
    ADD CONSTRAINT valid_contact_mechanism_role_contact_mechanism_type_fk FOREIGN KEY ( contact_mechanism_type_contact_mechanism_type_id
    )
        REFERENCES contact_mechanism_type ( contact_mechanism_type_id )
    NOT DEFERRABLE;

ALTER TABLE web_site_communication
    ADD CONSTRAINT web_site_communication_communication_event_fk FOREIGN KEY ( communication_event_id )
        REFERENCES communication_event ( communication_event_id )
    NOT DEFERRABLE;

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_5 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_3v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3v1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_1v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v2 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_4v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_4v1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_1v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v2 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_5v1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_3v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3v2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_3v2 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_7 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_7 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_7 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_6 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_6 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_6 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_6 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_8 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_8 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_8 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_8 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_8 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v3 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2v3 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1v4 - constraint trigger for Arc cannot be generated

CREATE SEQUENCE communication_event_role_type_communication_event_role_type_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER communication_event_role_type_communication_event_role_type_id_trg BEFORE
    INSERT ON communication_event_role_type
    FOR EACH ROW
    WHEN ( new.communication_event_role_type_id IS NULL )
BEGIN
    :new.communication_event_role_type_id := communication_event_role_type_communication_event_role_type_id_seq.nextval;
END;
/

CREATE SEQUENCE communication_event_status_type_communication_event_status_type_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER communication_event_status_type_communication_event_status_type_id_trg BEFORE
    INSERT ON communication_event_status_type
    FOR EACH ROW
    WHEN ( new.communication_event_status_type_id IS NULL )
BEGIN
    :new.communication_event_status_type_id := communication_event_status_type_communication_event_status_type_id_seq.nextval;
END;
/

CREATE SEQUENCE urm.person_pers_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER urm.person_pers_id_trg BEFORE
    INSERT ON urm.person
    FOR EACH ROW
    WHEN ( new.pers_id IS NULL )
BEGIN
    :new.pers_id := urm.person_pers_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            99
-- CREATE INDEX                            10
-- ALTER TABLE                            207
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                  77
-- WARNINGS                                 1
